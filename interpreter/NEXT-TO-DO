* can we make a SymbolTable which is haxe.ds.StringMap ?
* faster parsing
  * First try using http://api.haxe.org/haxe/remoting/HttpConnection.html to call the server instead of starting a new process each time
  * If that's still not good enough, declare all code samples in one place and use fixtures to access them so that we can limit the # of calls to ast_for
* have all instantiation go through one spot so we have access to the correct classes and such.
* switch fillFrom to use an enum indicating the type of return value is an expression, or some state in a larger algorithm
* experiment with object model represented as records instead of classes (see experiments dir)
* push more on that acceptance test.
* Check out ruby_parser, looks much smaller than Parser, so might be easier to bootstrap, and Ryan was really nice to me at RubyConf while Peter was kinda dismissive of this project
