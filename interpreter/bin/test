#!/usr/bin/env ruby

require_relative 'binary'
bin = Binary.new main:        'RunTests',
                 outstream:   $stdout,
                 errstream:   $stderr,
                 help_screen: <<HELPSCREEN
Usage: #$0 [a|r|t|h]

Command:
 %{green} a%{none}[ll]      - (DEFAULT) Run all tests
 %{green} r%{none}[uby]     - Run tests on ruby package (the interpreter itself)
 %{green} t%{none}[oplevel] - Run tests on toplevel modules
 %{green} h%{none}[elp]     - Show this help screen

HELPSCREEN


# process args and errors
ARGV.each do |arg|
  case arg
  when /^a(ll)?$/i      then bin.main = 'RunTests'
  when /^r(uby)?$/i     then bin.main = 'ruby.RunTests'
  when /^t(oplevel)?$/i then bin.main = 'toplevel.RunTests'
  when /^h(elp)?$/i     then bin.show_help = true
  when /^(-h|--help)$/  then bin.show_help = true
  else bin.show_help = true
       bin.add_error "Unknown argument #{arg.inspect}"
  end
end

if 1 < ARGV.count
  bin.show_help = true
  bin.add_error "Expected 1 argument at most, but you gave #{ARGV.inspect}"
end

bin.server_down? and bin.add_error \
  "Server is not running (no pidfile at #{bin.parser_pidfile.inspect}"\
  " probably do `rake parser:server:start`"


# early exits
bin.print_help    if bin.show_help?
bin.print_errors  if bin.errors?
exit !bin.errors? if bin.errors? || bin.show_help?


# run the script
ENV['RUBY_PARSER_PORT'] ||= '3003'
require 'shellwords'
bin.cd_root!
bin.puts orange: bin.command(:run).shelljoin
exec *bin.command(:run)
