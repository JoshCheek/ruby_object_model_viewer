Interpreter:
  swap all string states with enums
  move all state into the Interpreter thing
  Interpreter#currentExpression as attr
  create Stack class: (#push(val:T):T, #pop():T, #current:T, length:Int, isEmpty:Bool)

Binding class

test showing that I can set a local in toplevel binding, and then access it (ie interpreter is setting up the stack correctly)

-----

abstraction in world for constant lookup (world.toplevelNamespace.constants['A'])
abstraction in world for class creation

Binary to organize haxe notes
  jhx, uses cln stuff + useful other binary stuff probably
  jhx repl -> haxelib run ihx

LanguageGoBag
  Map#length
  Map#fetch

Objects
  lazily make the maps (e.g. constants can be null until we need to use it)

consolidate all objects into one file
